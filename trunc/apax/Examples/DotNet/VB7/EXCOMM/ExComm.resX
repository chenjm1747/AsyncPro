<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
            Microsoft ResX Schema 
        
            Version 1.3
                
            The primary goals of this format is to allow a simple XML format 
            that is mostly human readable. The generation and parsing of the 
            various data types are done through the TypeConverter classes 
            associated with the data types.
        
            Example:
        
                ... ado.net/XML headers & schema ...
                <resheader name="resmimetype">text/microsoft-resx</resheader>
                <resheader name="version">1.3</resheader>
                <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
                <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
                <data name="Name1">this is my long string</data>
                <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
                <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
                    [base64 mime encoded serialized .NET Framework object]
                </data>
                <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
                    [base64 mime encoded string representing a byte array form of the .NET Framework object]
                </data>
        
            There are any number of "resheader" rows that contain simple 
            name/value pairs.
            
            Each data row contains a name, and value. The row also contains a 
            type or mimetype. Type corresponds to a .NET class that support 
            text/value conversion through the TypeConverter architecture. 
            Classes that don't support this are serialized and stored with the 
            mimetype set.
                     
            The mimetype is used for serialized objects, and tells the 
            ResXResourceReader how to depersist the object. This is currently not 
            extensible. For a given mimetype the value must be set accordingly:
        
            Note - application/x-microsoft.net.object.binary.base64 is the format 
                   that the ResXResourceWriter will generate, however the reader can 
                   read any of the formats listed below.
        
            mimetype: application/x-microsoft.net.object.binary.base64
            value   : The object must be serialized with 
                    : System.Serialization.Formatters.Binary.BinaryFormatter
                    : and then encoded with base64 encoding.
        
            mimetype: application/x-microsoft.net.object.soap.base64
            value   : The object must be serialized with 
                    : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
                    : and then encoded with base64 encoding.
            mimetype: application/x-microsoft.net.object.bytearray.base64
            value   : The object must be serialized into a byte array 
                    : using a System.ComponentModel.TypeConverter
                    : and then encoded with base64 encoding.
        -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ToolTip1.Location" type="System.Drawing.Point, System.Drawing, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </data>
  <data name="Apax1.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0xLjAuMzMw
        MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFT
        eXN0ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAA8ggA
        AAIBAAAAAQAAAAAmAAAAezIxM0UwQjFGLTM0NjQtNDJBQy1BMkI1LUNFOTAzOUVENzg1Mn0AAAAAtwgA
        AFRQRjAMVEFweFRlcm1pbmFsAARMZWZ0AgADVG9wAgAFV2lkdGgD/gEGSGVpZ2h0A14BBEJhdWQDAEsJ
        Q29tTnVtYmVyAgAKRGV2aWNlVHlwZQcIZHREaXJlY3QIRGF0YUJpdHMCCANEVFIJDEhXRmxvd1VzZURU
        UggMSFdGbG93VXNlUlRTCBBIV0Zsb3dSZXF1aXJlRFNSCBBIV0Zsb3dSZXF1aXJlQ1RTCApJbkJ1ZmZT
        aXplAwAQCUxvZ0FsbEhleAgHTG9nZ2luZwcFdGxPZmYGTG9nSGV4CQdMb2dOYW1lBghBUFJPLkxPRwdM
        b2dTaXplAxAnC091dEJ1ZmZTaXplAwAQBlBhcml0eQcFcE5vbmUNUHJvbXB0Rm9yUG9ydAkJUlM0ODVN
        b2RlCANSVFMJCFN0b3BCaXRzAgENU1dGbG93T3B0aW9ucwcHc3dmTm9uZQhYT2ZmQ2hhcgITB1hPbkNo
        YXICEQtXaW5zb2NrTW9kZQcId3NDbGllbnQLV2luc29ja1BvcnQGBnRlbG5ldAhXc1RlbG5ldAkMQW5z
        d2VyT25SaW5nAgILRW5hYmxlVm9pY2UIC01heEF0dGVtcHRzAgMNSW50ZXJydXB0V2F2ZQkQTWF4TWVz
        c2FnZUxlbmd0aAI8EFNpbGVuY2VUaHJlc2hvbGQCMg1UYXBpUmV0cnlXYWl0AjwLVHJpbVNlY29uZHMC
        AhFUYXBpU3RhdHVzRGlzcGxheQgMVXNlU291bmRDYXJkCAtDYXB0dXJlRmlsZQYMQVBST1RFUk0uQ0FQ
        C0NhcHR1cmVNb2RlBwVjbU9mZgVDb2xvcgcGY2xOYXZ5B0NvbHVtbnMCUAlFbXVsYXRpb24HBXRlVFRZ
        DEZvbnQuQ2hhcnNldAcLT0VNX0NIQVJTRVQKRm9udC5Db2xvcgcIY2xTaWx2ZXILRm9udC5IZWlnaHQC
        9AlGb250Lk5hbWUGCFRlcm1pbmFsCkZvbnQuU3R5bGULAARSb3dzAhgRU2Nyb2xsYmFja0VuYWJsZWQI
        DlNjcm9sbGJhY2tSb3dzA8gADlRlcm1pbmFsQWN0aXZlCRFUZXJtaW5hbEJsaW5rVGltZQP0ARJUZXJt
        aW5hbEhhbGZEdXBsZXgIFVRlcm1pbmFsTGF6eUJ5dGVEZWxheQPIABVUZXJtaW5hbExhenlUaW1lRGVs
        YXkCZBZUZXJtaW5hbFVzZUxhenlEaXNwbGF5CRNUZXJtaW5hbFdhbnRBbGxLZXlzCQdWZXJzaW9uBgsx
        LjExIEJldGEgMRVQcm90b2NvbFN0YXR1c0Rpc3BsYXkICFByb3RvY29sBwhwdFptb2RlbQ5BYm9ydE5v
        Q2FycmllcggOQXNjaWlDaGFyRGVsYXkCABJBc2NpaUNSVHJhbnNsYXRpb24HB2FldE5vbmUPQXNjaWlF
        T0ZUaW1lb3V0A2wBDEFzY2lpRU9MQ2hhcgINEkFzY2lpTEZUcmFuc2xhdGlvbgcHYWV0Tm9uZQ5Bc2Np
        aUxpbmVEZWxheQIAEkFzY2lpU3VwcHJlc3NDdHJsWggQQmxvY2tDaGVja01ldGhvZAcIYmNtQ3JjMzIK
        RmluaXNoV2FpdANsAQ5IYW5kc2hha2VSZXRyeQIKDUhhbmRzaGFrZVdhaXQDRAQOSG9ub3JEaXJlY3Rv
        cnkIEEluY2x1ZGVEaXJlY3RvcnkID0tlcm1pdEN0bFByZWZpeAIjE0tlcm1pdEhpZ2hiaXRQcmVmaXgC
        WQxLZXJtaXRNYXhMZW4CUBBLZXJtaXRNYXhXaW5kb3dzAgASS2VybWl0UGFkQ2hhcmFjdGVyAgAOS2Vy
        bWl0UGFkQ291bnQCABJLZXJtaXRSZXBlYXRQcmVmaXgCfhJLZXJtaXRTV0NUdXJuRGVsYXkCABBLZXJt
        aXRUZXJtaW5hdG9yAg0RS2VybWl0VGltZW91dFNlY3MCBQ5SVFNMb3dGb3JXcml0ZQgMU2VuZEZpbGVO
        YW1lBgMqLioOU3RhdHVzSW50ZXJ2YWwCCg9UcmFuc21pdFRpbWVvdXQDRAQPVXBjYXNlRmlsZU5hbWVz
        CQ9Xcml0ZUZhaWxBY3Rpb24HDXdmV3JpdGVSZW5hbWUQWFltb2RlbUJsb2NrV2FpdAJbCFptb2RlbThL
        CBFabW9kZW1GaWxlT3B0aW9ucwcNemZvV3JpdGVOZXdlchFabW9kZW1GaW5pc2hSZXRyeQIAFFptb2Rl
        bU9wdGlvbk92ZXJyaWRlCA1abW9kZW1SZWNvdmVyCBBabW9kZW1Ta2lwTm9GaWxlCAdDYXB0aW9uBgpB
        cGF4IHYxLjAwEENhcHRpb25BbGlnbm1lbnQHCHRhQ2VudGVyDENhcHRpb25XaWR0aAJkCkxpZ2h0V2lk
        dGgCKA5MaWdodHNMaXRDb2xvcgcFY2xSZWQRTGlnaHRzTm90TGl0Q29sb3IHBmNsVGVhbBFTaG93TGln
        aHRDYXB0aW9ucwkKU2hvd0xpZ2h0cwkNU2hvd1N0YXR1c0JhcgkLU2hvd1Rvb2xCYXIIE1Nob3dEZXZp
        Y2VTZWxCdXR0b24JElNob3dDb25uZWN0QnV0dG9ucwkTU2hvd1Byb3RvY29sQnV0dG9ucwkTU2hvd1Rl
        cm1pbmFsQnV0dG9ucwkOTVNDb21tQ29tbVBvcnQCABBNU0NvbW1Db21wYXRpYmxlCA9NU0NvbW1EVFJF
        bmFibGUJEU1TQ29tbUhhbmRzaGFraW5nAgASTVNDb21tSW5CdWZmZXJTaXplAwAEDk1TQ29tbUlucHV0
        TGVuAgAPTVNDb21tSW5wdXRNb2RlAgATTVNDb21tT3V0QnVmZmVyU2l6ZQMAAg9NU0NvbW1SVFNFbmFi
        bGUJEU1TQ29tbVJUVGhyZXNob2xkAgAOTVNDb21tU2V0dGluZ3MGCzE5MjAwLE4sOCwxEE1TQ29tbVNU
        aHJlc2hvbGQCAAAACw==
</value>
  </data>
</root>